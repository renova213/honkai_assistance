// Mocks generated by Mockito 5.3.2 from annotations
// in honkai_lab/test/domain/usecases/get_elf_banner_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:honkai_lab/common/errors/failure.dart' as _i5;
import 'package:honkai_lab/domain/entities/active_code.dart' as _i6;
import 'package:honkai_lab/domain/entities/banner_character.dart' as _i9;
import 'package:honkai_lab/domain/entities/changelog.dart' as _i13;
import 'package:honkai_lab/domain/entities/character.dart' as _i12;
import 'package:honkai_lab/domain/entities/elf_banner.dart' as _i10;
import 'package:honkai_lab/domain/entities/event_honkai.dart' as _i7;
import 'package:honkai_lab/domain/entities/latest_update.dart' as _i8;
import 'package:honkai_lab/domain/entities/weapon_stigmata_banner.dart' as _i11;
import 'package:honkai_lab/domain/repositories/honkai_lab_repositories.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HonkaiLabRepositories].
///
/// See the documentation for Mockito's code generation for more information.
class MockHonkaiLabRepositories extends _i1.Mock
    implements _i3.HonkaiLabRepositories {
  MockHonkaiLabRepositories() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.ActiveCode>>> getActiveCodes(
          String? collectionName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveCodes,
          [collectionName],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.ActiveCode>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.ActiveCode>>(
          this,
          Invocation.method(
            #getActiveCodes,
            [collectionName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.ActiveCode>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.EventHonkai>>> getEventHonkai(
          String? collectionName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEventHonkai,
          [collectionName],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.EventHonkai>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.EventHonkai>>(
          this,
          Invocation.method(
            #getEventHonkai,
            [collectionName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.EventHonkai>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i8.LatestUpdate>>> getLatestUpdate(
          String? collectionName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLatestUpdate,
          [collectionName],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i8.LatestUpdate>>>.value(
                _FakeEither_0<_i5.Failure, List<_i8.LatestUpdate>>(
          this,
          Invocation.method(
            #getLatestUpdate,
            [collectionName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i8.LatestUpdate>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i9.BannerCharacter>>>
      getBannerCharacter(String? collectionName) => (super.noSuchMethod(
            Invocation.method(
              #getBannerCharacter,
              [collectionName],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i9.BannerCharacter>>>.value(
                _FakeEither_0<_i5.Failure, List<_i9.BannerCharacter>>(
              this,
              Invocation.method(
                #getBannerCharacter,
                [collectionName],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i9.BannerCharacter>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i10.ElfBanner>>> getElfBanner(
          String? collectionName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getElfBanner,
          [collectionName],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i10.ElfBanner>>>.value(
                _FakeEither_0<_i5.Failure, List<_i10.ElfBanner>>(
          this,
          Invocation.method(
            #getElfBanner,
            [collectionName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i10.ElfBanner>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i11.WeaponStigmataBanner>>>
      getWeaponStigmaBanner(String? collectionName) => (super.noSuchMethod(
            Invocation.method(
              #getWeaponStigmaBanner,
              [collectionName],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure,
                        List<_i11.WeaponStigmataBanner>>>.value(
                _FakeEither_0<_i5.Failure, List<_i11.WeaponStigmataBanner>>(
              this,
              Invocation.method(
                #getWeaponStigmaBanner,
                [collectionName],
              ),
            )),
          ) as _i4.Future<
              _i2.Either<_i5.Failure, List<_i11.WeaponStigmataBanner>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i12.Character>>> getCharacter(
    String? collectionName,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacter,
          [
            collectionName,
            value,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i12.Character>>>.value(
                _FakeEither_0<_i5.Failure, List<_i12.Character>>(
          this,
          Invocation.method(
            #getCharacter,
            [
              collectionName,
              value,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i12.Character>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i13.Changelog>> getChangelog(
          String? collectionName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChangelog,
          [collectionName],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i13.Changelog>>.value(
            _FakeEither_0<_i5.Failure, _i13.Changelog>(
          this,
          Invocation.method(
            #getChangelog,
            [collectionName],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i13.Changelog>>);
}
